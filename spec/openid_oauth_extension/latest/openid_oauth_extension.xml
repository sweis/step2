<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "../xml2rfc-1.33/rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>

<rfc category="std" ipr="full3978" docName="openid+oauth-draft.txt">

<?xml-stylesheet type='text/xsl' href='../xml2rfc-1.33/rfc2629xlst/rfc2629.xslt' ?>

<?rfc toc="yes"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc private="draft" ?>
<?rfc strict="yes" ?>

  <front>
    <title>OpenID OAuth Extension</title>
    <author initials='D.' surname="Balfanz" fullname='Dirk Balfanz (editor)'>
      <organization abbrev='Google'>Google, Inc.</organization>
      <address>
        <email>balfanz@google.com</email>
      </address>
    </author>
    <author initials='B.' surname="de Medeiros" fullname='Breno de Medeiros (editor)'>
      <organization abbrev='Google'>Google, Inc.</organization>
      <address>
        <email>breno@google.com</email>
      </address>
    </author>
      <author initials='D.' surname="Recordon" fullname='David Recordon (editor)'>
      <organization abbrev='Six Apart'>Six Apart, Ltd.</organization>
      <address>
        <email>david@sixapart.com</email>
      </address>
    </author>
    <author initials='J.' surname="Smarr" fullname='Joseph Smarr (editor)'>
      <organization abbrev='Plaxo'>Plaxo, Inc.</organization>
      <address>
        <email>joseph@plaxo.com</email>
      </address>
    </author>
    <date year='2008'/>
    <abstract>
      <t>This draft describes a mechanism to combine an OpenID 
        authentication request with the approval of an OAuth request token.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Requirements notation">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
        "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
        and "OPTIONAL" in this document are to be interpreted as
        described in <xref target="RFC2119"/>.
      </t>
    </section>

    <section title="Terminology">
      <t>Terms <spanx>emphasized</spanx> are pre-defined in either the
        <xref target="OpenID"/>
        or the <xref target="OAuth"/> specifications.
        <list style="hanging">
          <t hangText="Combined Consumer:">
            A web service that is simultaneously an OpenID
            <spanx style="emph">Relying Party (RP)</spanx> and
            an OAuth <spanx>Consumer.</spanx>
          </t>
          <t hangText="Combined Provider:">A web service that is simultaneously
            an OpenID <spanx style="emph">Identity Provider (OP)</spanx> and
            an OAuth <spanx style="emph">Service Provider (SP).</spanx>
          </t>
        </list>
      </t>
    </section>

    <section title ="Purpose of this Specification"> 
      <t>The OpenID OAuth Extension describes how to make the OpenID
        Authentication and OAuth Core specifications work well
        together. In its current form, it addresses the use case where
        the OpenID Provider and OAuth Service Provider are the same
        service. To provide good user experience, it is important to
        present, to the user, a combined authentication and
        authorization screen for the two protocols.
      </t>
      <t>This extension describes how to embed an OAuth approval
       request into an OpenID authentication request to permit
       combined user approval.  For security reasons, the OAuth access
       token is not returned in the OpenID authentication response.
       Instead a mechanism to obtain the access token is provided.
     </t>
   </section>

    <section title="Overview">
      <t>Unlike standard OAuth (<xref target="OAuth"/>), the OpenID
        OAuth Extension does not provision request tokens in a
        server-to-server request from the Combined Consumer to the
        request token endpoint at the Combined Provider. Instead, the
        Combined Provider returns an already-approved request token to
        the Combined Consumer as part of the OpenID authentication
        response.
      </t>

      <t>
	The Combined Consumer then exchanges the request token for an
        access token at the access token endpoint of the Combined 
        Provider, following standard OAuth practice. 
      </t>
    </section>

    <section title="Discovery">
      <t>Discovery of the OpenID OAuth Extension is achieved via the
      mechanism described in <xref target="OpenID"/>. The OpenID OAuth
      Extension namespace
      "http://specs.openid.net/extensions/oauth/1.0" SHOULD be listed
      as an &lt;xrd:Type&gt; child element of the &lt;xrd:Service&gt;
      element in the XRDS discovery document.
      </t>
    </section>

    <section anchor='Registered' title="Before Requesting Authentication - Registration">
      <t>The Combined Consumer and the Combined Provider agree on a
      consumer key and consumer secret (see <xref target="OAuth"/>).
      </t>
      <t>The Combined Provider SHOULD in addition obtain, from the
      Combined Consumer, a list of valid OpenID realms that the
      Combined Consumer may use in subsequent authentication
      requests. The Combined Provider SHOULD verify that the Combined
      Consumer is authorized to use those realms.
      </t>
    </section>

    <section anchor='AuthReq' title="Requesting Authentication">
      <t>When requesting OpenID Authentication via the protocol mode
        "checkid_setup" or "checkid_immediate", this extension can be
        used to request that the end user authorize an OAuth access token at
        the same time as an OpenID authentication.  This is done by
        sending the following parameters as part of the OpenID
        request.
        <list style="hanging">
          <t hangText='openid.ns.oauth'>
            REQUIRED. Value: "http://specs.openid.net/extensions/oauth/1.0".</t>
          <t hangText="openid.oauth.consumer">
            REQUIRED. Value: The consumer key agreed upon in <xref target="Registered"/>.
	  </t>
          <t hangText="openid.oauth.scope">
            OPTIONAL. Value: A string that encodes, in a way possibly specific to
            the Combined Provider, one or more scopes for the OAuth
            token expected in the authentication response.
	  </t>
        </list>
      </t>
    </section>

    <section title="Authorizing the OAuth Request">
      <t>If the OpenID OAuth Extension is present in the authentication
	request, the Combined Provider SHOULD verify that the consumer
	key passed in the request is authorized to be used for the
	realm passed in the request. If this verification succeeds, the
	Combined Provider SHOULD determine that delegation of access
	from a user to the Combined Consumer has been requested.</t>

	<t>The Combined Provider SHOULD NOT issue an approved request
	token unless it has user consent to perform such delegation.
      </t>
    </section>

    <section anchor='AuthResp' title="Responding to Authentication Requests">
      <t>If the OpenID authentication request cannot be fulfilled (either in
        failure mode "setup_needed" or "cancel" as in Sections 10.2.1 and 10.2.2
        of <xref target="OpenID"/>) then the OAuth request SHOULD be considered
        to fail and the Provider MUST NOT send any OpenID OAuth Extension values in the
        response.
      </t> 
      <t>The remainder of this section specifies how to handle the OAuth
        request in cases when the OpenID authentication response is a positive 
        assertion (Section 10.1 of <xref target="OpenID"/>).
      </t>
      <t>If the end user does wish to delegate access to the Combined Consumer,
        the Combined Provider MUST include and MUST sign
        the following parameters.
        <list style="hanging">
          <t hangText='openid.ns.oauth'>
            REQUIRED. Identical value as defined in <xref target='AuthReq' />.
          </t>
          <t hangText="openid.oauth.consumer">
            REQUIRED. Value: The consumer key sent in the request.
	  </t>
          <t hangText='openid.oauth.request_token'>
            REQUIRED. A user-approved request token.
          </t>  
          <t hangText='openid.oauth.scope'>
            OPTIONAL.  A string that encodes, in a way possibly specific to
            the Combined Provider, one or more scopes that the
            returned request token is valid for. This will typically
            indicate a subset of the scopes requested in <xref target="AuthReq"/>.
          </t>  
        </list>
        To note that the OAuth Authorization was declined or not valid, 
        the Combined Provider SHALL only respond with the parameter
        "openid.ns.oauth".
      </t>
    </section>

    <section anchor="AuthTokenReq" title="Obtaining the Access Token">
      <t>To exchange the request token for an access token, the
        Combined Consumer follows Section 6.3.1 of
        <xref target="OAuth"/>, i.e., it sends an access token request
        to the access token endpoint of the Combined Provider. It
        SHALL use the following values to create the OAuth access
        token request:
        <list style="hanging">
          <t hangText='consumer key'>
	    Combined Consumers use the consumer key they established with the
	    Combined Provider in <xref target='Registered'/>.
          </t>
          <t hangText='consumer secret'>
	    Combined Consumers use the consumer secret they established with
	    the Combined Provider in <xref target='Registered'/>.
          </t>  
          <t hangText='OAuth token'>
	    Combined Consumers use the request token obtained in
	    <xref target="AuthResp"/>.
          </t>  
          <t hangText='OAuth token secret'>
	    Combined Consumers use the empty string.
          </t>  
        </list>
      </t>
      <t>
	The Combined Provider follows Section 6.3.2 to verify the
	request and either issue the access token or send an error
	response. 
      </t>
    </section>

    <section title="General Considerations">
      <t>The proposal takes the approach to insulate each protocol
        from the other, both for backwards compatibility as
        well as to enable OpenID and OAuth to evolve and incorporate additional
        features without requiring reviews of the combined usage described here.
        In particular:
        <list style="hanging">
          <t hangText="OpenID full compatibility">The OpenID identity provider
            (OP) MAY safely announce the endpoint supporting the OpenID OAuth Extension
            to all relying parties, whether or not they support
            the extension as well.
            The use of a separate service-type announcement
            for Combined Providers
            endpoints provides a mechanism for auto-discovery
            of OAuth capabilities by RPs.
          </t>
          <t hangText="OAuth token compatibility">The OAuth tokens approved
            via this mechanism MAY be used identically as tokens acquired through
            alternative mechanisms (e.g., via standard OAuth) without requiring
            special considerations either because of functionality or security
            reasons.
          </t>
        </list>
      </t>
    </section>

    <section title="Security Considerations">
      <t>This proposal composes protocols that provide security
        services (authentication in the case of OpenID, authorization
        in the case of OAuth) with the intention that the combined
        protocol provides both services simultaneously. Since security
        is not a property generally preserved by composition, the
        design takes the approach of encapsulating the OAuth flow
        within OpenID in a modular way, and applies the general
        rule-of-thumb of NOT introducing reliance on the security
        properties of one protocol for the correctness of the
        other. Ultimately, only public scrutiny and review can
        incrementally provide confidence that the approach described
        here is sound from a security perspective.</t>
      <t>The following security principles are reflected in this design:
        <list style="hanging">
          <t hangText="No long-term OAuth secrets hit the browser">
            The OAuth protocol was designed so that browser-mediated
            communication is not used to transfer long-term secrets or
            capabilities to access data.(Instead, server-to-server
            calls are used to exchange such secrets). Combined
            Providers can preserve this property by making the
            request_token short-lived, since the request token will be
            exchanged for an access token and secret over a
            server-to-server call.
          </t>
          <t hangText="Imposters cannot retrieve the OAuth access token">
	    While it is possible for a malicious party to fake an
	    OpenID request, including an OpenID request that includes
	    the OpenID OAuth Extension (the request is not signed, and
	    knowledge of the consumer key and realm is sufficient
	    to cause the Combined Provider to display an authorization
	    page for that realm/consumer), that malicious party would
	    have to have knowledge of the consumer secret to exchange
	    the request token for an access token. Note that while
	    secure under reasonable threat models, this is different
	    from standard OAuth: In standard OAuth, one needs
	    knowledge of both the consumer key and consumer secret
	    (or, alternatively, of a request token obtained through
	    knowledge of the consumer key and secret) to cause the
	    Service Provider to display an authorization page for that
	    consumer. 
          </t>
        </list>
      </t>
    </section>
  </middle>

<back>
  <references title='Normative References'>&rfc2119;
    <reference anchor="OpenID"
        target="http://openid.net/specs/openid-authentication-2_0.html">
      <front>
        <title abbrev="OpenID">OpenID Authentication 2.0 - Final</title>
        <author>
          <organization>Openid.net</organization>
          <address>
            <email>specs@openid.net</email>
          </address>
        </author>
        <date day="5" month="December" year="2007"/>
      </front>
      <format type='HTML' target="http://openid.net/specs/openid-authentication-2_0.html"/>
      <format type='TXT' target="http://openid.net/specs/openid-authentication-2_0.txt"/>
    </reference>
    <reference anchor="OAuth" target="http://oauth.net/core/1.0/">
      <front>
        <title abbrev="OAuth">OAuth Core 1.0</title>
        <author>
          <organization>OAuth Core Workgroup</organization>
          <address>
            <email>spec@oauth.net</email>
          </address>
        </author>
        <date day="4" month="December" year="2007"/>
      </front>
      <format type="HTML" target="http://oauth.net/core/1.0/"/>
    </reference>
  </references>
</back>
</rfc>
